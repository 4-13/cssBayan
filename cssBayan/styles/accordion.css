@layer vars,
base,
layout,
state,
custom;

@layer vars {
	.accordion {
		/* cross icon size */
		--icon-block-size: 2rem;
		--button-inline-size: 2rem;
		/* content max-block-size */
		--content-row-block-size: 25rem;
		--content-row-block-size: 15rem;
		/* transitions */
		--transition-duration: .4s;
		--transition-timing-function: linear;
	}

	@media (min-width: 48rem) {
		.accordion {
			--content-row-block-size: 20rem;
		}
	}

	@media (min-width: 64rem) {
		.accordion {
			--content-row-block-size: 25rem;
		}
	}
}

@layer base {
	.accordion-item {
		transition: opacity var(--transition-duration) var(--transition-timing-function);
	}

	.accordion-item:has(:focus-visible) {
		outline: 0.125rem dashed var(--tea-green);
	}

	.accordion-item__header {
		background-color: var(--federal-blue);
		border-radius: .5rem;
		padding: .5rem;
	}

	.accordion-item__description {
		color: var(--tea-green);
		font-weight: bold;
	}

	.accordion-item__image {
		display: block;
		border-radius: .5rem;
		user-select: none;
	}

	.accordion-item__icon {
		inline-size: var(--icon-block-size);
		block-size: var(--icon-block-size);
		rotate: var(--rotate, 0);
		stroke: var(--stroke, var(--tea-green));
		opacity: var(--opacity, 0);
		transition-property: rotate, stroke, opacity;
		transition-duration: var(--transition-duration);
		transition-timing-function: var(--transition-timing-function);
	}

	.accordion-item__body {
		padding-block-start: 1rem;
		transition: max-block-size .4s linear;
	}

	@media (hover: hover) and (pointer: fine) {
		.accordion-item__content:hover {
			cursor: pointer;
		}
	}
}

@layer layout {
	.accordion-item:not(:last-child) {
		margin-block-end: 1rem;
	}

	.accordion-item__content {
		display: grid;
		grid-template-areas:
			'description icon'
			'content content';
		grid-template-columns: 1fr auto;
		grid-template-rows: min-content var(--row-block-size);
		transition: grid-template-rows var(--transition-duration) var(--transition-timing-function);
	}

	.accordion-item__header {
		display: flex;
		align-items: center;
		gap: 1rem;
		justify-content: space-between;
	}

	.accordion-item__description {
		grid-area: description;
		align-self: center;
	}

	.accordion-item__icon {
		grid-area: icon;
		align-self: center;
		justify-self: end;
		flex-shrink: 0;
	}

	.accordion-item__body {
		grid-area: content;

	}

	.accordion-item__image {
		margin-inline: auto;
		max-block-size: 100%;
		max-inline-size: 100%;
	}
}

@layer state {
	.accordion-item__content {
		--row-block-size: 0;
	}

	.accordion-item__input:checked + .accordion-item__content {
		--row-block-size: var(--content-row-block-size);
	}

	.accordion-item__input:checked + .accordion-item__content .accordion-item__icon {
		--rotate: 45deg;
		--stroke: var(--red);
	}

	.accordion-item:has(:active) {
		animation: click 0.4s linear;
	}

	.accordion-item:has(:checked):has(:active) {
		animation: shake-horizontal 0.4s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;
	}

	@media (hover: hover) and (pointer: fine) {
		.accordion:hover {
			--opacity: 1;
		}

		.accordion-item:has(:hover):not(:has(:checked)) {
			opacity: .5;
		}

		.accordion-item:has(:hover) .accordion-item__icon {
			--rotate: 45deg;
			--stroke: var(--red);
		}

		.accordion-item:has(:hover) .accordion-item__content {
			--row-block-size: var(--content-row-block-size);
		}
	}
}


@keyframes click {

	0%,
	100% {
		transform: scale(1, 1);
	}

	40% {
		transform: scale(0.95);
	}

	80% {
		transform: translateX(1.05);
	}
}

@keyframes shake-horizontal {

	0%,
	100% {
		transform: translateX(0);
	}

	10%,
	30%,
	50%,
	70% {
		transform: translateX(-0.625rem);
	}

	20%,
	40%,
	60% {
		transform: translateX(0.625rem);
	}

	80% {
		transform: translateX(0.5rem);
	}

	90% {
		transform: translateX(-0.5rem);
	}
}